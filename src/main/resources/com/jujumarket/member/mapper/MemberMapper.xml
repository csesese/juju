<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jujumarket.member.mapper.MemberMapper">
   
   <insert id="insertCustomer">
      <selectKey keyProperty="idNo" order="BEFORE"
      resultType="String">
         select 'c'||lpad(seq_customer.nextval,4,'0')
         from dual
      </selectKey>
   
      insert into t_member (idNo, pwd, emailAccount, memName, memCode) 
      values (#{idNo}, #{pwd}, #{emailAccount}, #{memName}, 'CUSTOMER')
   </insert>
   
   <insert id="insertSeller">
      <selectKey keyProperty="idNo" order="BEFORE"
      resultType="String">
         select 's'||lpad(seq_seller.nextval,4,'0')
         from dual
      </selectKey>
   
      insert into t_member (idNo, pwd, emailAccount, memName, memCode) 
      values (#{idNo}, #{pwd}, #{emailAccount}, #{memName}, 'JUNIOR')
   </insert>


<!-- 세션에 id만 받아올 때 만들었음 -->
   <select id ="getIdNoByEmailAccount" resultType="String">
      select idNo
      from t_member
      where emailAccount = #{emailAccount}
   
   </select>
  
  <!-- 세션에 VO 받아오기 -->
   <select id="getMemberInfo" resultType="com.jujumarket.member.domain.MemberVO">
   		select idNo, emailAccount, memName, memCode
   		from t_member
   		where emailAccount = #{emailAccount}
   
   </select>
   
   <select id ="getEmailAccount" resultType="String">
      select emailAccount
      from t_member
      where emailAccount = #{emailAccount}
   
   </select>
   
   <select id="getPwdByIdNo" resultType="String">
      select pwd
      from t_member
      where idNo = #{idNo}
   
   </select>
   
   
   <select id="getPwdByEmailAccount" resultType="String">
      select pwd
      from t_member
      where emailAccount = #{emailAccount}


   </select> 
   
      <!-- orderItemsForm.jsp에 뿌려주기 위한 회원정보들을 MemberVO, CustomerVO에서 각각 받아 OrderMemberVO를 만듦 -->
   <select id="orderMemberInfo" resultType="com.jujumarket.order.domain.OrderMemberVO">
   
      select tm.memname, tm.memaddr, mc.contact, tm.emailAccount, tm.idNo
      from t_member tm, m_customer mc
      where tm.idNo = mc.idNo
      and tm.idNo = #{idNo} 
   
   </select>
   
   <update id="modifyMemberInfo">
      update t_member
      set 
      memName = #{memName},
      memAddr = #{memAddr}
      where idNo = #{idNo}
   
   </update>
   
    <update id="updatePwd">
      update t_member
      set 
      pwd = #{pwd}
      where emailAccount = #{emailAccount}
   
   </update>
   
   
   <delete id="deleteMember">
      delete t_member
   where idNo = #{idNo}   
   
   </delete>


   
</mapper>